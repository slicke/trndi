name: Build Trndi for macOS ARM64

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: macos-14  # Uses macOS 14 with Apple Silicon

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Lazarus
        run: |
          brew update
          brew install fpc
          brew install lazarus
          echo "Installed FPC version:"
          fpc -iV
          echo "Installed Lazarus version:"
          lazbuild --version

      - name: Install Command Line Developer Tools
        run: |
          # Install the command line tools
          sudo xcode-select --install || true
          sudo xcodebuild -license accept || true

      - name: Modify project file to remove mormot2
        run: |
          find . -name "*.lpi" -type f -exec sed -i '' '/<Item>.*<PackageName Value="mormot2"\/>/,/<\/Item>/d' {} \;
          echo "Removed mormot2 package references from project files"

      - name: Set up build environment
        run: |
          # Create directories if they don't exist
          mkdir -p $HOME/.lazarus/lib/units/aarch64-darwin
          # Set required environment variables
          echo "FPC_CPU_TARGET=aarch64" >> $GITHUB_ENV
          echo "LC_ALL=en_US.UTF-8" >> $GITHUB_ENV
          echo "LANG=en_US.UTF-8" >> $GITHUB_ENV

      - name: Build Trndi
        run: |
          echo "Starting build process for Trndi..."
          # Using lazbuild with proper parameters for ARM64 architecture
          lazbuild --build-mode="Release" --cpu=aarch64 --os=darwin --widgetset=cocoa ./path/to/your/project.lpi
          
          # Remove quarantine attribute that macOS adds to compiled binaries
          find ./path/to/output -type f -name "*.app" -exec xattr -drv com.apple.quarantine {} \;
          
          echo "Build completed successfully"

      - name: Package application
        run: |
          # Create output directory
          mkdir -p ./dist
          
          # Copy built application to dist folder
          cp -R ./path/to/output/*.app ./dist/
          
          # Create zip archive
          cd ./dist
          zip -r ../Trndi-macos-arm64.zip ./*
          cd ..
          
          echo "Application packaged successfully"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Trndi-macOS-arm64
          path: ./Trndi-macos-arm64.zip
          retention-days: 7
