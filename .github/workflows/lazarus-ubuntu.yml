name: Build Trndi for Linux x86_64 (Qt6 Widgetset)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux-qt6:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1. Check out repository
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Cache Lazarus/FPC installation
      - name: Cache Lazarus/FPC
        id: cache-lazarus
        uses: actions/cache@v3
        with:
          path: ~/.cache/lazarus
          key: lazarus-fpc-linux-qt6-v1

      - name: Download Lazarus 4.0 .deb files
        run: |
           wget https://download.lazarus-ide.org/lazarus/releases/Lazarus%204.0/lazarus-project_4.0.0-0_amd64.deb
           wget https://download.lazarus-ide.org/lazarus/releases/Lazarus%204.0/fpc-lazarus_3.2.2-210_amd64.deb
           wget https://download.lazarus-ide.org/lazarus/releases/Lazarus%204.0/fpc-src_3.2.2-210_amd64.deb

      - name: Install dependencies
        run: |
           sudo apt-get update
           sudo apt-get install -y qt6-base-dev qt6-tools-dev qt6-tools-dev-tools libqt6pas-dev p7zip-full

      - name: Install Lazarus 4.0 and FPC via .deb
        run: |
           sudo apt-get install -y ./fpc-lazarus_3.2.2-210_amd64.deb ./fpc-src_3.2.2-210_amd64.deb ./lazarus-project_4.0.0-0_amd64.deb
           sudo apt-get install -f -y
           
      # 4. Verify Lazarus Installation
      - name: Verify Lazarus Installation
        run: |
          lazbuild --version
          fpc -iV
          qmake6 -version || echo "qmake6 not found"
          ls /usr/lib/*qt6* || true

      # 5. Cache static libraries
      - name: Restore Static Libraries Cache
        id: cache-static
        uses: actions/cache@v3
        with:
          path: ../static
          key: static-libraries-linux-qt6

      # 6. Download and Extract Static Libraries if not cached
      - name: Download and Extract Static Libraries
        if: steps.cache-static.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/synopse/mORMot2/releases/download/2.3.stable/mormot2static.7z
          mkdir -p ../static
          7z x mormot2static.7z -o../static -y

      - name: Save Static Libraries Cache
        uses: actions/cache/save@v3
        with:
          path: ../static
          key: static-libraries-linux-qt6

      # 7. Copy static libraries to build folder
      - name: Copy Static Libraries
        run: |
          cp -r ../static/x86_64-linux/* . || echo 'No static libs found to copy'

      # 8. Cache mORMot2 source
      - name: Restore mORMot2 Cache
        id: cache-mormot2
        uses: actions/cache@v3
        with:
          path: externals/mORMot2
          key: mormot2-repo-linux

      # 9. Clone mORMot2 Repository if needed
      - name: Clone mORMot2 Repository
        if: steps.cache-mormot2.outputs.cache-hit != 'true'
        run: |
          mkdir -p externals
          git clone https://github.com/synopse/mORMot2.git externals/mORMot2

      # 10. Build mORMot2 Package (for Lazarus)
      - name: Build mORMot2 Package
        run: |
          lazbuild externals/mORMot2/packages/lazarus/mormot2.lpk

      # 11. Build Trndi.lpr with Qt6 widgetset
      - name: Build Trndi.lpr (Qt6 widgetset)
        run: |
          lazbuild --widgetset=qt6 --build-mode="Extensions (Release)" Trndi.lpr

      - name: Create artifacts directory
        run: |
          mkdir -p artifacts
          cp Trndi artifacts/

      - name: Package artifact
        run: |
          cd artifacts
          zip ../Trndi-developer-build-linux-qt6-x64.zip Trndi
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: Trndi-developer-build-linux-qt6-x64.zip
          tag_name: v${{ github.run_number }}-linux
          name: Linux Qt6 x64 Build ${{ github.run_number }}
          body: |
            Linux developer build from commit ${{ github.sha }} (Qt6 x64).
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}